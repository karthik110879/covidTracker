{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/countries/countries.component.ts","webpack:///src/app/components/countries/countries.component.html","webpack:///src/app/components/dashboard-card/dashboard-card.component.ts","webpack:///src/app/components/dashboard-card/dashboard-card.component.html","webpack:///src/app/components/feedback/feedback.component.ts","webpack:///src/app/components/feedback/feedback.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/data-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CountriesComponent","service","totalActive","totalRecovered","totalConfirmed","totalDeaths","selectedCountry","loading","data","countries","datatable","chart","LineChart","height","options","curveType","hAxis","vAxis","animation","duration","easing","is3D","getAllCountries","getStats","getGlobalData","subscribe","next","console","log","response","error","err","getGlobalStatistics","globalStatsData","country","index","findIndex","selectedCountryData","cases","total","active","recovered","deaths","updateChart","dataTable","push","day","initChart","updateValues","DashboardCardComponent","decimalPipe","changes","transform","FeedbackComponent","FooterComponent","HomeComponent","dataService","defaultCaseType","PieChart","ColumnChart","color","legend","position","textStyle","fontSize","fontName","bubble","forEach","event","target","value","selection","caseType","countrystats","NavbarComponent","DataServiceService","http","baseUrl","baseUrl_V2","base_url","globalDataUrl","dateWiseDataUrl","extension","now","Date","month","getMonth","date","getDate","year","getFullYear","status","setDate","setHours","get","responseType","pipe","result","rows","split","mainData","header","dates","splice","row","cols","con","dw","parse","headers","providedIn","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CountriesComponent } from './components/countries/countries.component';\r\nimport { FeedbackComponent } from './components/feedback/feedback.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path:'countries',\r\n    component: CountriesComponent\r\n  },\r\n  {\r\n    path:'feedback',\r\n    component: FeedbackComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'covidtracker';\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container-xxl\" style=\"padding: .5rem;\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CountriesComponent } from './components/countries/countries.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { FeedbackComponent } from './components/feedback/feedback.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { DecimalPipe } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavbarComponent,\r\n        HomeComponent,\r\n        CountriesComponent,\r\n        DashboardCardComponent,\r\n        FeedbackComponent,\r\n        FooterComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        GoogleChartsModule,\r\n    ],\r\n    providers: [\r\n        DecimalPipe\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { stringify } from 'querystring';\r\nimport { merge, forkJoin, combineLatest   } from 'rxjs';\r\nimport { map, mergeAll } from 'rxjs/operators';\r\nimport { DateWiseData } from 'src/app/models/date-wise-data';\r\nimport { globalDataSummary } from 'src/app/models/global-data';\r\nimport { StatisticsResponse } from 'src/app/models/statistic.model';\r\nimport { DataServiceService } from 'src/app/services/data-service.service';\r\n\r\n@Component({\r\n  selector: 'app-countries',\r\n  templateUrl: './countries.component.html',\r\n  styleUrls: ['./countries.component.css']\r\n})\r\nexport class CountriesComponent implements OnInit {\r\n  totalActive = 0;\r\n  totalRecovered = 0;\r\n  totalConfirmed = 0;\r\n  totalDeaths = 0;\r\n  selectedCountryData:StatisticsResponse;\r\n  selectedCountry:string = '';\r\n  dateWiseData;\r\n  globalStatsData:any[];\r\n  loading = true;\r\n  data :any =[];\r\n  countries: string[] = [];\r\n  datatable = [];\r\n  chart = {\r\n    LineChart : \"LineChart\", \r\n    height: 500, \r\n    options: {\r\n      title: 'Date Wise Data',\r\n      curveType: 'function',\r\n      hAxis: {\r\n        title: 'Countries'\r\n      },\r\n      vAxis: {\r\n        title: 'Active'\r\n      },\r\n      animation:{\r\n        duration: 1000,\r\n        easing: 'out',\r\n      },\r\n      is3D: true\r\n    }  \r\n  }\r\n\r\n\r\n  constructor(private service : DataServiceService) { }\r\n\r\n  ngOnInit(): void { \r\n    // merge(\r\n    //   this.service.getDatwWiseData().pipe(\r\n    //     map(result=>{\r\n    //       this.dateWiseData = result;\r\n    //     })\r\n    //   ), \r\n    //   this.service.getGlobalData().pipe(map(result=>{\r\n    //     this.data = result;\r\n    //     this.data.forEach(cs=>{\r\n    //       this.countries.push(cs.country)\r\n    //     })\r\n    //   }))\r\n    // ).subscribe(\r\n    //   {\r\n    //     complete : ()=>{\r\n    //      this.updateValues('Afghanistan')\r\n    //      this.loading = false;\r\n    //     }\r\n    //   }\r\n    // )\r\n\r\n\r\n    this.getAllCountries();\r\n    this.getStats()\r\n\r\n  } \r\n\r\n  getAllCountries() {\r\n    this.service.getGlobalData().subscribe({\r\n      next: (data) => { \r\n        console.log('data', data.response);\r\n        this.countries = data.response; \r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        console.log('err', err);\r\n        this.loading = false; \r\n      }\r\n    })\r\n  }\r\n\r\n  getStats() {\r\n    this.service.getGlobalStatistics().subscribe({\r\n      next:(data) => {\r\n        console.log('getGlobalStatistics data', data.response);\r\n        const response: any[] = data.response;\r\n        this.globalStatsData = response;\r\n        this.selectedCountry = this.globalStatsData[0]?.country; \r\n        const index = this.globalStatsData.findIndex((country:StatisticsResponse) => country.country === this.selectedCountry);\r\n        if(index !== -1) {\r\n          this.selectedCountryData = this.globalStatsData[index];\r\n\r\n          this.totalConfirmed = this.selectedCountryData.cases.total !== null ? this.selectedCountryData.cases.total : 0;\r\n          this.totalActive = this.selectedCountryData.cases.active !== null ? this.selectedCountryData.cases.active : 0;\r\n          this.totalRecovered = this.selectedCountryData.cases.recovered !== null ? this.selectedCountryData.cases.recovered : 0;\r\n          this.totalDeaths = this.selectedCountryData.deaths.total !== null ? this.selectedCountryData.deaths.total : 0;\r\n        }\r\n        this.updateChart();\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        console.log('err', err);\r\n        this.loading = false; \r\n      }\r\n    })\r\n  }\r\n\r\n  updateChart(){\r\n    let dataTable = [];\r\n    dataTable.push([\"Date\" , 'Cases'])\r\n    dataTable.push([this.selectedCountryData.day , this.selectedCountryData.cases])\r\n    // this.selectedCountryData.forEach(cs=>{\r\n    // })\r\n\r\n    this.initChart()\r\n  }\r\n\r\n  updateValues(selectedCountry : string){\r\n    console.log('SELECTED VALUE', selectedCountry);\r\n    this.selectedCountry = selectedCountry; \r\n\r\n    const index = this.globalStatsData.findIndex((country:StatisticsResponse) => country.country === selectedCountry);\r\n\r\n    if(index !== -1) { \r\n      this.selectedCountryData = this.globalStatsData[index];\r\n\r\n      this.totalConfirmed = this.selectedCountryData.cases.total !== null ? this.selectedCountryData.cases.total : 0;\r\n      this.totalActive = this.selectedCountryData.cases.active !== null ? this.selectedCountryData.cases.active : 0;\r\n      this.totalRecovered = this.selectedCountryData.cases.recovered !== null ? this.selectedCountryData.cases.recovered : 0;\r\n      this.totalDeaths = this.selectedCountryData.deaths.total !== null ? this.selectedCountryData.deaths.total : 0;\r\n    } \r\n\r\n    this.updateChart(); \r\n  }\r\n\r\n\r\n\r\n  initChart() {\r\n\r\n    this.datatable = [];\r\n    // this.datatable.push([\"Country\", \"Cases\"])\r\n    \r\n    // this.selectedCountryData.forEach(cs => {\r\n    //   let value :Date ;\r\n\r\n    //     if (cs.cases > 2000)\r\n    //       value = cs.date\r\n        \r\n    //   })\r\n    this.datatable.push([ this.selectedCountryData.country, this.selectedCountryData.day ])\r\n    console.log('initChart',this.datatable);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\r\n    <div class=\"ui text loader\">Loading..</div>\r\n</div>\r\n \r\n<!-- <ngx-loading [show]=\"loading\" ></ngx-loading> -->\r\n<div class=\"bg-white text-center\">\r\n\r\n    <h1 class=\"display-5\">COVID-19 Coronavirus pandamic Tracker(Country wice)</h1>\r\n    <p class=\"lead\">A snapshot of the entire data of a selected country</p>\r\n\r\n    <hr>\r\n\r\n</div>\r\n \r\n\r\n<div class=\"mx-auto\">\r\n    <div class=\"form-group col-lg-5 mx-auto\">\r\n        <label for=\"c\">Select Country</label>\r\n        <select name=\"\" [(ngModel)]=\"selectedCountry\" class=\"form-control\" id=\"c\" #input (change)='updateValues(input.value)'>\r\n            <option id='new' value=\"{{con}}\" *ngFor=\"let con of countries\">{{con}}</option>\r\n        </select>\r\n    </div>\r\n</div>\r\n<div  class=\"bg-light text-center\" style=\"padding:.6rem\">\r\n    <div class=\"alert alert-warning\">\r\n        <p>NOTE: As of <strong>April 13, 2024</strong>, the Coronavirus Tracker is no longer being updated\r\n            due to the unfeasibility of providing statistically valid global totals, as the majority of countries have\r\n            now stopped reporting.</p>\r\n    </div>\r\n\r\n    <app-dashboard-card [totalConfirmed]='totalConfirmed'[totalActive]='totalActive' [totalRecovered]='totalRecovered'\r\n    [totalDeaths]='totalDeaths'\r\n    ></app-dashboard-card>\r\n    \r\n    <hr>\r\n\r\n    <div class=\"row\" *ngIf=\"false\">\r\n        <div class=\"col\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Sno.</th>\r\n                        <th>Date</th>\r\n                        <th>Cases</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let cs of selectedCountryData; index as i\">\r\n                        <td>{{ i +1}}</td>\r\n                        <td>{{cs.date | date:'mediumDate'}}</td>\r\n                        <td>{{ cs.cases }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col\">\r\n            <google-chart [type]='chart.LineChart' value = d [options]='chart.options' style=\"width: 100%;\"  [height]='chart.height' [data]='datatable   '></google-chart>\r\n        </div>\r\n    </div>\r\n\r\n</div>  ","import { DecimalPipe } from '@angular/common';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-card',\r\n  templateUrl: './dashboard-card.component.html',\r\n  styleUrls: ['./dashboard-card.component.css']\r\n})\r\nexport class DashboardCardComponent implements OnInit, OnChanges {\r\n\r\n  @Input('totalConfirmed')\r\n  totalConfirmed;\r\n  @Input('totalActive')\r\n  totalActive;\r\n  @Input('totalRecovered')\r\n  totalRecovered;\r\n  @Input('totalDeaths')\r\n  totalDeaths;\r\n\r\n  constructor(\r\n    private decimalPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes) {\r\n      this.totalConfirmed = this.decimalPipe.transform(this.totalConfirmed, '1.0-0');\r\n      this.totalActive = this.decimalPipe.transform(this.totalActive, '1.0-0');\r\n      this.totalRecovered = this.decimalPipe.transform(this.totalRecovered, '1.0-0');\r\n      this.totalDeaths = this.decimalPipe.transform(this.totalDeaths, '1.0-0');\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n\r\n    <div class=\"card c1 col p-3 m-3\">\r\n        <div class=\"ui statistic\">\r\n            <div class=\"value\">\r\n                {{ totalConfirmed }}\r\n            </div>\r\n            <div class=\"label label-default\">\r\n                <h3>Confirmed</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card c2 col p-3 m-3\">\r\n        <div class=\"ui statistic\">\r\n            <div class=\"value\">\r\n                {{ totalActive }}\r\n            </div>\r\n            <div class=\"label label-default\">\r\n                <h3>Active</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card c3 col p-3 m-3\">\r\n        <div class=\"ui statistic\">\r\n            <div class=\"value\">\r\n                {{ totalRecovered }}\r\n            </div>\r\n            <div class=\"label label-default\">\r\n                <h3>Recovered</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card c4 col p-3 m-3\">\r\n        <div class=\"ui statistic\">\r\n            <div class=\"value\">\r\n                {{ totalDeaths }}\r\n            </div>\r\n            <div class=\"label label-default\">\r\n                <h3>Deaths</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"," \r\n<div class=\"bg-white text-center\">\r\n\r\n    <h1 class=\"display-5\">COVID-19 Coronavirus pandamic Tracker(WIP)</h1>\r\n    <p class=\"lead\">Please provide your feedback. It really helps me inprove.</p>\r\n\r\n    <hr>\r\n\r\n</div> \r\n\r\n<div class=\"container d-flex justify-content-center\" >\r\n    <div class=\"row\" style=\"gap: 6rem\">\r\n        <form class=\"ui form\">\r\n            <div class=\"field\">\r\n            <label>Name</label>\r\n            <input type=\"text\" name=\"first-name\" placeholder=\"Your Name\">\r\n            </div>\r\n            <div class=\"field\">\r\n            <label>Rating</label>\r\n            <input type=\"text\" name=\"last-name\" placeholder=\"How would you rate this site out of 5?\">\r\n            </div>\r\n            <div class=\"field\">\r\n                <label>What do you think about this Dashboard?</label>\r\n                <textarea placeholder=\"Please write some feedback here!!\"></textarea>\r\n            </div>\r\n            <button class=\"ui button\" type=\"submit\">Submit</button>\r\n        </form>\r\n        <div class=\"right floated column\">\r\n            <img src=\"../../../assets/feedback.png\" alt=\"\" height=\"400px\" srcset=\"\">\r\n        </div>\r\n    </div>\r\n    \r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"ui four column grid footer\">\r\n  <div class=\"container\">\r\n    <div class=\"column clma\">\r\n      <p><b> About The Site</b></p>\r\n      <p>The Data of Covid-19 Pandamic is being taken from a free API .</p>\r\n      <p>API Credits : <a class=\"apicredits\" href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\"> @CSSEGISandData</a> ==> GITHUB</p>\r\n    </div>\r\n    \r\n    <div class=\"column clmb\">\r\n      <p><b>Latest Updates</b></p>\r\n      <p>Implemented Dynamic Updation of Data - yey!!</p>\r\n    </div>\r\n  </div>    \r\n</div>","import { DecimalPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { GoogleChartsConfig } from 'angular-google-charts/lib/models/google-charts-config.model';\r\nimport { globalDataSummary } from 'src/app/models/global-data';\r\nimport { StatisticsResponse } from 'src/app/models/statistic.model';\r\nimport { DataServiceService } from 'src/app/services/data-service.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  totalConfirmed = 0;\r\n  totalActive = 0;\r\n  totalDeaths = 0;\r\n  totalRecovered = 0;\r\n  loading:boolean = true;\r\n  globalStatsData:any[];\r\n  datatable = [];\r\n  defaultCaseType:string = 'confirmed'\r\n  chart = {\r\n    PieChart : \"PieChart\" ,\r\n    ColumnChart : 'ColumnChart' ,\r\n    LineChart : \"LineChart\", \r\n    height: 500, \r\n    options: {\r\n      color: ['#99999'],\r\n      animation:{\r\n        duration: 1000,\r\n        easing: 'out',\r\n        \r\n      },\r\n      legend: {\r\n        position: 'bottom',\r\n        textStyle: {\r\n            color: 'black',\r\n            fontSize: 13,\r\n            fontName: 'ro'\r\n        }\r\n      },\r\n      hAxis: {title: 'Life Expectancy'},\r\n      vAxis: {title: 'Fertility Rate'},\r\n      bubble: {textStyle: {fontSize: 11}},\r\n      is3D: true\r\n    }  \r\n  }\r\n\r\n  countries:string[] = null;\r\n  \r\n  constructor(\r\n    private dataService: DataServiceService,\r\n   \r\n  ) { }\r\n\r\n  ngOnInit(): void { \r\n    this.getAllCountries();\r\n    this.getStats()\r\n  }\r\n\r\n  getStats() {\r\n    this.dataService.getGlobalStatistics().subscribe({\r\n      next:(data) => {\r\n        console.log('data', data.response);\r\n        const response: any[] = data.response;\r\n        this.globalStatsData = response;\r\n        this.globalStatsData.forEach((country:StatisticsResponse) => {\r\n          if(country.country === 'All') {\r\n            this.totalConfirmed = country.cases.total !== null ? country.cases.total : 0;\r\n            this.totalActive = country.cases.active !== null ? country.cases.active : 0;\r\n            this.totalRecovered = country.cases.recovered !== null ? country.cases.recovered : 0;\r\n            this.totalDeaths = country.deaths.total !== null ? country.deaths.total : 0;\r\n          }\r\n        })\r\n        this.loading = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.dataService.getGlobalData().subscribe({\r\n      next: (data) => { \r\n        console.log('data', data.response);\r\n        this.countries = data.response;\r\n        \r\n      },\r\n      error: (err) => {\r\n        console.log('err', err);\r\n        this.loading = false; \r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  updateChart(event: any) { \r\n    console.log('EVENT VALUE', event.target.value);\r\n    const selection = event.target.value;\r\n    this.initChart(selection)\r\n  }\r\n\r\n  initChart(caseType: string) {\r\n    this.defaultCaseType = caseType;\r\n    \r\n    this.datatable = [];\r\n    // this.datatable.push([\"Country\", \"Cases\"])\r\n\r\n    this.globalStatsData.forEach((countrystats: StatisticsResponse) => {\r\n      if(countrystats.country !== 'All') {\r\n        let value: number;\r\n        console.log('countrystats', countrystats); \r\n        switch (this.defaultCaseType) {\r\n          case 'confirmed':\r\n            value = countrystats.cases.total !== null ? countrystats.cases.total : 0 ; \r\n            break;\r\n          case 'deaths':\r\n            value = countrystats.deaths.total  !== null ? countrystats.deaths.total : 0 ;\r\n            break;\r\n          case 'recoverd':\r\n            value = countrystats.cases.recovered  !== null ? countrystats.cases.recovered : 0 ;\r\n            break;\r\n          case 'active':\r\n            value = countrystats.cases.active  !== null ? countrystats.cases.active : 0 \r\n            break; \r\n          default:\r\n            break;\r\n        }\r\n  \r\n        this.datatable.push([\r\n          countrystats.country, value\r\n        ])\r\n      }\r\n    })\r\n    console.log(this.datatable);\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\r\n    <div class=\"ui text loader\">Loading..</div>\r\n</div> \r\n\r\n<div class=\"bg-white text-center\">\r\n\r\n    <h1 class=\"display-5\">COVID-19 Coronavirus pandamic Tracker</h1>\r\n    <p class=\"lead\">A snapshot of the entire data across all the countries</p>\r\n\r\n    <hr>\r\n\r\n</div>\r\n\r\n<div class=\"bg-light text-center\" style=\"padding:.6rem\">\r\n    <div class=\"alert alert-warning\">\r\n        <p>NOTE: As of <strong>April 13, 2024</strong>, the Coronavirus Tracker is no longer being updated\r\n            due to the unfeasibility of providing statistically valid global totals, as the majority of countries have\r\n            now stopped reporting.</p>\r\n    </div>\r\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered'\r\n        [totalDeaths]='totalDeaths'>\r\n    </app-dashboard-card>\r\n</div>\r\n\r\n<br>\r\n\r\n<div class=\"ui form\">\r\n    <div class=\"inline fields\">\r\n        <label for=\"fruit\">Select Case Type:</label>\r\n        <div class=\"field\">\r\n            <div class=\"ui radio checkbox\">\r\n                <input type=\"radio\" value=\"confirmed\" id=\"c\" name=\"casetype\" (click)='updateChart($event)' checked=\"\" tabindex=\"0\"\r\n                    [checked]=\"defaultCaseType === 'confirmed'\" \r\n                    class=\"hidden\">\r\n                <label for=\"c\">Confirmed</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"field\">\r\n            <div class=\"ui radio checkbox\">\r\n                <input type=\"radio\" id=\"d\" value=\"deaths\" name=\"casetype\" (click)='updateChart($event)' tabindex=\"0\"\r\n                    [checked]=\"defaultCaseType === 'deaths'\"\r\n                    class=\"hidden\">\r\n                <label for=\"d\">Deaths</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"field\">\r\n            <div class=\"ui radio checkbox\">\r\n                <input type=\"radio\" value=\"recoverd\" id=\"r\" name=\"casetype\" (click)='updateChart($event)' tabindex=\"0\"\r\n                    [checked]=\"defaultCaseType === 'recoverd'\"\r\n                    class=\"hidden\">\r\n                <label for=\"r\">Recoverd</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"field\">\r\n            <div class=\"ui radio checkbox\">\r\n                <input type=\"radio\" value=\"active\" id=\"a\" (click)='updateChart($event)' name=\"casetype\" tabindex=\"0\"\r\n                    [checked]=\"defaultCaseType === 'active'\"\r\n                    class=\"hidden\">\r\n                <label for=\"a\">Active</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col\">\r\n        <google-chart [type]='chart.PieChart' [options]='chart.options' style=\"width: 100%;\" [height]='chart.height'\r\n            [data]='datatable'></google-chart>\r\n    </div>\r\n    <div class=\"col\">\r\n        <google-chart [type]='chart.ColumnChart' style=\"width: 100%;\" [options]='chart.options' [height]='chart.height'\r\n            [data]='datatable'></google-chart>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand brand\" routerLink='/'><b> Covid-19 Tracker</b></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link btn\"routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item \">\r\n          <a class=\"nav-link btn\" routerLink='countries'>countries</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link btn\" routerLink='feedback'>Feedback</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { globalDataSummary } from '../models/global-data';\r\nimport { DateWiseData } from '../models/date-wise-data';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataServiceService {\r\n    private baseUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\r\n    private baseUrl_V2 = environment.base_url;\r\n    private globalDataUrl = '';\r\n    private dateWiseDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv';\r\n    private extension = '.csv';\r\n    month: number;\r\n    date: number;\r\n    year: number;\r\n\r\n\r\n    getDate(date: number) {\r\n        if (date < 10) {\r\n            return `0${date}`\r\n        }\r\n        return date\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n        let now = new Date();\r\n        this.month = now.getMonth() + 1;\r\n        this.date = now.getDate() - 1;\r\n        this.year = now.getFullYear(); \r\n\r\n        this.globalDataUrl = `${this.baseUrl}${'02-23-2023'}${this.extension}`\r\n        console.log(this.globalDataUrl); \r\n    }\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n        if (error.status == 404) {\r\n            let now = new Date();\r\n            now.setDate(now.getDate() - 1);\r\n            now.setHours(-1);\r\n            this.month = now.getMonth();\r\n            this.date = now.getDate();\r\n            this.year = now.getFullYear();\r\n            // this.globalDataUrl = `${this.baseUrl}${this.getDate(this.month)}-${this.getDate(this.date)}-${this.year}${this.extension}`;\r\n            this.globalDataUrl = `${this.baseUrl}${'02'}-${'23'}-${'2023'}${this.extension}`;\r\n            return this.getGlobalData();\r\n        }\r\n    }\r\n\r\n    getDatwWiseData() {\r\n        return this.http.get(this.dateWiseDataUrl, { responseType: 'text' })\r\n            .pipe(map(result => {\r\n                let rows = result.split('\\n');\r\n                //console.log(rows);\r\n                let mainData = {};\r\n                let header = rows[0];\r\n                let dates = header.split(/,(?=\\S)/);\r\n                dates.splice(0, 4);\r\n                rows.splice(0, 1);\r\n                rows.forEach(row => {\r\n                    let cols = row.split(/,(?=\\S)/);\r\n                    let con = cols[1];\r\n                    cols.splice(0, 4);\r\n                    //console.log(con , cols);\r\n                    mainData[con] = [];\r\n                    cols.forEach((value, index) => {\r\n                        let dw: DateWiseData = {\r\n                            cases: +value,\r\n                            country: con,\r\n                            date: new Date(Date.parse(dates[index]))\r\n                        }\r\n                        mainData[con].push(dw)\r\n                    })\r\n\r\n                })\r\n\r\n\r\n\r\n                //console.log(mainData);\r\n\r\n\r\n\r\n                return mainData;\r\n            }))\r\n    }\r\n\r\n    getGlobalData(): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'X-RapidAPI-Key': '31bcaa3ac8msh6e2a7a19925c46ap1bd627jsn07bb10ca18b2',\r\n            'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\r\n        });\r\n\r\n        return this.http.get<any>(this.baseUrl_V2 + 'countries', { headers }); \r\n    }\r\n\r\n    getGlobalStatistics():Observable<any>  {\r\n        let headers = new HttpHeaders({\r\n            'X-RapidAPI-Key': '31bcaa3ac8msh6e2a7a19925c46ap1bd627jsn07bb10ca18b2',\r\n            'X-RapidAPI-Host': 'covid-193.p.rapidapi.com'\r\n        });\r\n\r\n        return this.http.get<any>(this.baseUrl_V2 + 'statistics', { headers }); \r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  base_url: 'https://covid-193.p.rapidapi.com/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}